substitutions:
  name: default
  dname: ${name}-clk
  uname: ${name}_clk

esphome:
  platformio_options:
    board_build.flash_size: 8MB
    board_upload.maximum_size: 8388608
  name: $dname
  includes: 
    # download from https://github.com/adafruit/Adafruit_LED_Backpack
    - include/Adafruit_LEDBackpack.h
  libraries:
    - "Wire"
    - "SPI"
    - "Adafruit BusIO"
    - "Adafruit GFX Library"
    - "Adafruit LED Backpack Library"

esp32:
  board: adafruit_feather_esp32s3
  flash_size: 8MB
  framework:
    type: arduino

# Enable logging
logger:
  logs:
    component: ERROR

ota:
  platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_ssid_password

bluetooth_proxy:

api:

# the ESP32 board used has i2c on non-standard pins
i2c:
  sda: 3
  scl: 4

time:
  - platform: homeassistant
    id: homeassistant_time
    on_time:
      - seconds: 0
        minutes: /1 # Update every minute
        then:
          - script.execute: time_update    

script:
  - id: time_update
    then:
      - lambda: |-
          static Adafruit_7segment clock = Adafruit_7segment();
          int hours = id(homeassistant_time).now().hour;
          int minutes = id(homeassistant_time).now().minute;
          if (hours > 12) {
            hours = hours - 12;
          } else if ( hours == 0) {
            hours = 12;
          };
          int displayValue = hours*100 + minutes;
          clock.begin(0x70);
          clock.print(displayValue, DEC);
          clock.drawColon(1);
          clock.writeDisplay();

# setup display dimmer
number:
  - platform: template
    name: ${uname} brightness
    min_value: 0
    max_value: 15
    step: 1
    optimistic: true
    restore_value: true
    initial_value: 10
    set_action:
      - lambda: |-
           static Adafruit_7segment clock = Adafruit_7segment();
           clock.begin(0x70);
           clock.setBrightness(x);

# setup sensors
button:
  - platform: restart
    name: ${uname} restart
  - platform: safe_mode
    name: ${uname} restart safe
    icon: mdi:restart-alert

binary_sensor:
  - platform: status
    name: ${uname} status

sensor:
  - platform: wifi_signal
    name:  ${uname} wifi signal
    update_interval: 60s
  - platform: uptime
    id: uptime_seconds
    internal: true
