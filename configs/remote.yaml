substitutions:
  # the first is meant to be overridden on the command line
  name: default
  # these can be left alone unless they really need to be changed
  dname: ${name}-remote
  uname: ${name}_remote

esphome:
  name: ${dname}
  on_boot:
    - priority: 250
      then:
        - lambda: |-
            auto cause = esp_sleep_get_wakeup_cause();
            if (cause == ESP_SLEEP_WAKEUP_EXT0) {
              ESP_LOGI("main", "Device woke up by EXT0");
            } else if (cause == ESP_SLEEP_WAKEUP_TIMER) {
              ESP_LOGD("main", "Device woke up by timer.");
            } else {
              ESP_LOGD("main", "Device woke up by other cause: %d", cause);
            }

esp32:
  board: lolin32_lite
  framework:
    type: esp-idf

api:
  reboot_timeout: 5min

ota:
  platform: esphome

logger:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_ssid_password
  fast_connect: true
  power_save_mode: LIGHT
  output_power: 10dB

deep_sleep:
  id: deep_sleep_ctrl
  wakeup_pin:
    number: GPIO0
    inverted: true
    allow_other_uses: true

button:
  - platform: restart
    name: restart
  - platform: safe_mode
    name: restart safe
    icon: mdi:restart-alert

switch:
  - platform: template
    name: active
    id: active
    icon: mdi:remote
    optimistic: true
    restore_mode: ALWAYS_ON
    on_turn_off:
      - delay: 5s
      - deep_sleep.enter: deep_sleep_ctrl

sensor:
  - platform: wifi_signal
    name:  wifi signal
    update_interval: 60s
  - platform: adc
    pin: GPIO36
    name: battery voltage
    id: battvolt
    device_class: voltage
    accuracy_decimals: 1
    attenuation: auto
    update_interval: 60s
    on_value:
      then:
        - component.update: battlevel
    filters:
      - lambda: return x * (10000 + 10000)/10000;
  - platform: template
    name: battery level
    id: battlevel
    device_class: battery
    accuracy_decimals: 0
    unit_of_measurement: "%"
    update_interval: 1200s
    lambda: return id(battvolt).state;
    filters:
      - calibrate_linear:
         method: exact
         datapoints:
          - 0.00 -> 0.0
          - 3.30 -> 1.0
          - 3.39 -> 10.0
          - 3.72 -> 50.0
          - 4.05 -> 90.0
          - 4.14 -> 100.0
      - lambda: |-
          if (x <= 100) {
            return x;
          } else {
            return 100;
          }
          if (x < 0) {
            return 0;
          }

binary_sensor:
  - platform: status
    name: status
  - platform: gpio
    pin:
      number: GPIO0
      mode:
        input: true
        pullup: true
      inverted: true
      allow_other_uses: true
    name: power
    internal: true
    on_press:
      then:
        - switch.template.publish:
            id: active
            state: OFF
  - platform: gpio
    pin:
      number: GPIO2
      mode:
        input: true
        pullup: true
      inverted: true
    name: back
    internal: true
    on_press:
        then:
          - homeassistant.event:
              event: esphome.remote_button_pressed
              data: {button: "${uname} back"}
  - platform: gpio
    pin:
      number: GPIO4
      mode:
        input: true
        pullup: true
      inverted: true
    name: info
    internal: true
    on_multi_click:
      - timing:
          - ON for at most 350ms
        then:
          - homeassistant.event:
              event: esphome.remote_button_pressed
              data: {button: "${uname} info", type: "single"}
      - timing:
          - ON for at least 500ms
        then:
          - homeassistant.event:
              event: esphome.remote_button_pressed
              data: {button: "${uname} info", type: "long"}
  - platform: gpio
    pin:
      number: GPIO5
      mode:
        input: true
        pullup: true
      inverted: true
    name: menu
    internal: true
    on_press:
        then:
          - homeassistant.event:
              event: esphome.remote_button_pressed
              data: {button: "${uname} menu"}
  - platform: gpio
    pin:
      number: GPIO12
      mode:
        input: true
        pullup: true
      inverted: true
    name: vol_up
    id: vol_up
    internal: true
    on_press:
      - while:
          condition:
            binary_sensor.is_on: vol_up
          then:
            - homeassistant.event:
                event: esphome.remote_button_pressed
                data: {button: "${uname} vol_up"}
            - delay: 0.6s
  - platform: gpio
    pin:
      number: GPIO13
      mode:
        input: true
        pullup: true
      inverted: true
    name: play_pause
    internal: true
    on_press:
        then:
          - homeassistant.event:
              event: esphome.remote_button_pressed
              data: {button: "${uname} play_pause"}
  - platform: gpio
    pin:
      number: GPIO14
      mode:
        input: true
        pullup: true
      inverted: true
    name: next
    internal: true
    on_press:
        then:
          - homeassistant.event:
              event: esphome.remote_button_pressed
              data: {button: "${uname} next"}
  - platform: gpio
    pin:
      number: GPIO15
      mode:
        input: true
        pullup: true
      inverted: true
    name: vol_down
    id: vol_down
    internal: true
    on_press:
      - while:
          condition:
            binary_sensor.is_on: vol_down
          then:
            - homeassistant.event:
                event: esphome.remote_button_pressed
                data: {button: "${uname} vol_down"}
            - delay: 0.6s
  - platform: gpio
    pin:
      number: GPIO16
      mode:
        input: true
        pullup: true
      inverted: true
    name: stop
    internal: true
    on_press:
        then:
          - homeassistant.event:
              event: esphome.remote_button_pressed
              data: {button: "${uname} stop"}
  - platform: gpio
    pin:
      number: GPIO17
      mode:
        input: true
        pullup: true
      inverted: true
    name: prev
    internal: true
    on_press:
        then:
          - homeassistant.event:
              event: esphome.remote_button_pressed
              data: {button: "${uname} prev"}
  - platform: gpio
    pin:
      number: GPIO18
      mode:
        input: true
        pullup: true
      inverted: true
    name: up
    id: up
    internal: true
    on_press:
      then:
        - homeassistant.event:
            event: esphome.remote_button_pressed
            data: {button: "${uname} up"}
  - platform: gpio
    pin:
      number: GPIO19
      mode:
        input: true
        pullup: true
      inverted: true
    name: left
    id: left
    internal: true
    on_press:
      then:
        - homeassistant.event:
            event: esphome.remote_button_pressed
            data: {button: "${uname} left"}
  - platform: gpio
    pin:
      number: GPIO22
      mode:
        input: true
        pullup: true
      inverted: true
    name: select
    internal: true
    on_press:
        then:
          - homeassistant.event:
              event: esphome.remote_button_pressed
              data: {button: "${uname} select"}
  - platform: gpio
    pin:
      number: GPIO23
      mode:
        input: true
        pullup: true
      inverted: true
    name: right
    id: right
    internal: true
    on_press:
      then:
        - homeassistant.event:
            event: esphome.remote_button_pressed
            data: {button: "${uname} right"}
  - platform: gpio
    pin:
      number: GPIO25
      mode:
        input: true
        pullup: true
      inverted: true
    name: down
    id: down
    internal: true
    on_press:
      then:
        - homeassistant.event:
            event: esphome.remote_button_pressed
            data: {button: "${uname} down"}
  - platform: gpio
    pin:
      number: GPIO26
      mode:
        input: true
        pullup: true
      inverted: true
    name: rew
    id: rew
    internal: true
    on_press:
      then:
        - homeassistant.event:
            event: esphome.remote_button_pressed
            data: {button: "${uname} rew"}
  - platform: gpio
    pin:
      number: GPIO27
      mode:
        input: true
        pullup: true
      inverted: true
    name: ff
    id: ff
    internal: true
    on_press:
      then:
        - homeassistant.event:
            event: esphome.remote_button_pressed
            data: {button: "${uname} ff"}
  - platform: gpio
    pin:
      number: GPIO32
      mode:
        input: true
        pullup: true
      inverted: true
    name: tv
    internal: true
    on_press:
        then:
          - homeassistant.event:
              event: esphome.remote_button_pressed
              data: {button: "${uname} tv"}
  - platform: gpio
    pin:
      number: GPIO33
      mode:
        input: true
        pullup: true
      inverted: true
    name: kodi
    internal: true
    on_press:
        then:
          - homeassistant.event:
              event: esphome.remote_button_pressed
              data: {button: "${uname} kodi"}
  - platform: gpio
    pin:
      number: GPIO34
      mode:
        input: true
      inverted: true
    name: mute
    internal: true
    on_press:
        then:
          - homeassistant.event:
              event: esphome.remote_button_pressed
              data: {button: "${uname} mute"}
  - platform: gpio
    pin:
      number: GPIO35
      mode:
        input: true
      inverted: true
    name: appletv
    internal: true
    on_press:
        then:
          - homeassistant.event:
              event: esphome.remote_button_pressed
              data: {button: "${uname} appletv"}
